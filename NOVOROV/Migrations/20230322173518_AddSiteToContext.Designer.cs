// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NOVOROV.Context;

#nullable disable

namespace NOVOROV.Migrations
{
    [DbContext(typeof(RovDbContext))]
    [Migration("20230322173518_AddSiteToContext")]
    partial class AddSiteToContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NOVOROV.Models.AlteracaoOcorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConteudoAnterior")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConteudoAtual")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NomeCampo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeHost")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("AlteracaoOcorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AutorId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("DataAnexo")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAnexo")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("NomeAnexo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NumeroVersaoAnexo")
                        .HasColumnType("int");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TipoAnexoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("TipoAnexoId");

                    b.ToTable("Anexo");
                });

            modelBuilder.Entity("NOVOROV.Models.ApoliceSeguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoApoliceSeguro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeApoliceSeguro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TipoOcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoSiteId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorApoliceSeguro")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("TipoOcorrenciaId");

                    b.HasIndex("TipoSiteId");

                    b.ToTable("ApoliceSeguro");
                });

            modelBuilder.Entity("NOVOROV.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoDenominacao")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SiglaArea")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SiglaVp")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("NOVOROV.Models.AuditoriaDano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Controle")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataAuditoriaDano")
                        .HasColumnType("datetime2");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoEquipamentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDano")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorRecuperado")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("TipoEquipamentoId");

                    b.ToTable("AuditoriaDano");
                });

            modelBuilder.Entity("NOVOROV.Models.AuditoriaRecuperacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("DanoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAuditoriaRecuperacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int>("QualificacaoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAuditoriaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ValorPassivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorRecuperadoPassivo")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("DanoId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("QualificacaoId");

                    b.HasIndex("TipoAuditoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AuditoriaRecuperacao");
                });

            modelBuilder.Entity("NOVOROV.Models.Biblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnalistaSolicitanteId")
                        .HasColumnType("int");

                    b.Property<string>("AnalistaSolicitanteUsuarioId")
                        .HasColumnType("varchar(10)");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAnexo")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("NomeAnexo")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoBibliotecaId")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("AnalistaSolicitanteUsuarioId");

                    b.HasIndex("TipoBibliotecaId");

                    b.ToTable("Biblioteca");
                });

            modelBuilder.Entity("NOVOROV.Models.Dano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDano")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEvitado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRecuperado")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeDano")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<int>("NumeroAntigo")
                        .HasColumnType("int");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeEquipamento")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TipoEquipamentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDano")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorEvitado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorRecuperado")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("TipoEquipamentoId");

                    b.ToTable("Dano");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AcionadoProntoAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAcionadoProntoAtendimento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AcionadoProntoAtendimento");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AlarmeRealAcidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAlarmeRealAcidente")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AlarmeRealAcidente");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AnaliseConclusao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAnaliseConclusao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AnaliseConclusao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AreaInterna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAreaInterna")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AreaInterna");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AreaInternaPassivo", b =>
                {
                    b.Property<int>("AreaInternaPassivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaInternaPassivoId"));

                    b.Property<string>("NomeAreaInternaPassivoo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("AreaInternaPassivoId");

                    b.ToTable("AreaInternaPassivo");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AreaSaude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAreaSaude")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AreaSaude");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AreaTratamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAreaTratamento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AreaTratamento");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AtendimentoSLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAtendimentoSLA")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AtendimentoSLA");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AtualizacaoOcorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAtualizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoHistoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InformanteId")
                        .HasColumnType("int");

                    b.Property<int>("MotivoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeFormulario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumeroVersaoOcorrencia")
                        .HasColumnType("int");

                    b.Property<bool>("StatusAtualizacao")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusPrioridade")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MotivoId");

                    b.ToTable("AtualizacaoOcorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AuditoriaInfrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Justificativa")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<bool>("Reincidencia")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AuditoriaInfrator");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.BombeiroCivil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeBombeiroCivil")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("BombeiroCivil");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.BombeiroMilitar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeBombeiroMilitar")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("BombeiroMilitar");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Cmc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeCmc")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nucleo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Cmc");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Detentora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeDetentora")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Detentora");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.EmpresaChamadoSis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeEmpresaChamadoSis")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaChamadoSis");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.EmpresaPassivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEmpresaPassivo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaPassivo");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.EquipamentoPerda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEquipamentoPerda")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TipoEquipamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEquipamentoId");

                    b.ToTable("EquipamentoPerda");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.EquipamentoSis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NomeEquipamentoSis")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EquipamentoSis");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.EventoERB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEventoERB")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EventoERB");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.FornecimentoAcessoFisico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeFornecimentoAcessoFisico")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FornecimentoAcessoFisico");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.FornecimentoEventoAlarme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeFornecimentoEventoAlarme")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FornecimentoEventoAlarme");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.FornecimentoImagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeFornecimentoImagem")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FornecimentoImagem");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.GestaoPerda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeGestaoPerda")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GestaoPerda");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.GestaoQualidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeGestaoQualidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GestaoQualidade");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Inbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeInbox")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Inbox");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.InformacaoComplementar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeInformacaoComplementar")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InformacaoComplementar");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeLocal")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Manutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeManutencao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Manutencao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Motivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoMotivo")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NomeMotivo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Motivo");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.OrgaoPublico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeOrgaoPublico")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OrgaoPublico");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomePerfil")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Placa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomePlaca")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Placa");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.PlanoDeEmergencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomePlanoDeEmergencia")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PlanoDeEmergencia");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Qualificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeQualificacao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Qualificacao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.RegistroPolicial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeRegistroPolicial")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RegistroPolicial");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Seguimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeSeguimento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Seguimento");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.SistemaFechaduraBluetooth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeSistemaFechaduraBluetooth")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SistemaFechaduraBluetooth");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.SistemaRastreamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeSistemaRastreamento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SistemaRastreamento");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.SistemaSis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeSistemaSis")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SistemaSis");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeStatus")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTipoAcesso")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoAcesso");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoAnexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTipoAnexo")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("TipoAnexo");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoAuditoria", b =>
                {
                    b.Property<int>("TipoAuditoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoAuditoriaId"));

                    b.Property<string>("NomeTipoAuditoria")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoAuditoriaId");

                    b.ToTable("TipoAuditoria");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoBiblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTipoBiblioteca")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoBiblioteca");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTipoEquipamento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoEquipamento");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoOcorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DescricaoTipoOcorrencia")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeTipoOcorrencia")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoOcorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoRessarcimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTipoRessarcimento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoRessarcimento");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("NomeTipoSite")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoSite");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Transportadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTransportadora")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Transportadora");
                });

            modelBuilder.Entity("NOVOROV.Models.EmpresaProntoAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEmpresaProntoAtendimento")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaProntoAtendimento");
                });

            modelBuilder.Entity("NOVOROV.Models.Observacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoObservacao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Observacao");
                });

            modelBuilder.Entity("NOVOROV.Models.Ocorrencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AcionadoProntoAtendimentoId")
                        .HasColumnType("int");

                    b.Property<int?>("AlarmeRealAcidenteId")
                        .HasColumnType("int");

                    b.Property<string>("Ambiente")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("AnaliseConclusaoId")
                        .HasColumnType("int");

                    b.Property<int?>("AreaInternaId")
                        .HasColumnType("int");

                    b.Property<int>("AreaSaudeId")
                        .HasColumnType("int");

                    b.Property<int?>("AreaTratamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("AtendimentoSLAId")
                        .HasColumnType("int");

                    b.Property<int?>("BombeiroCivilId")
                        .HasColumnType("int");

                    b.Property<int?>("BombeiroMilitarId")
                        .HasColumnType("int");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CargoFuncao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CmcId")
                        .HasColumnType("int");

                    b.Property<string>("ConclusaoAveriguacao")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Condutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAcionamentoProntoAtendimento")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataConclusaoAveriguacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataConclusaoSis")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInicioAveriguacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataOcorrencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPassagem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataReagendamentoSis")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataRegistro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataRegistroReagendamentoSis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSSMA")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("DetentoraId")
                        .HasColumnType("int");

                    b.Property<int?>("DiasConclusao")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaChamadoSisId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaProntoAtendimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EquipamentoSisId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("EventoERBId")
                        .HasColumnType("int");

                    b.Property<int?>("FornecimentoAcessoFisicoId")
                        .HasColumnType("int");

                    b.Property<int?>("FornecimentoEventoAlarmeId")
                        .HasColumnType("int");

                    b.Property<int?>("FornecimentoImagemId")
                        .HasColumnType("int");

                    b.Property<int?>("GestaoPerdaId")
                        .HasColumnType("int");

                    b.Property<int?>("GestaoQualidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Historico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HoraOcorrencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HoraRegistro")
                        .HasColumnType("datetime");

                    b.Property<int>("InboxId")
                        .HasColumnType("int");

                    b.Property<string>("Indicacao")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("InformacaoComplementarId")
                        .HasColumnType("int");

                    b.Property<string>("InformacaoOrigem")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LocalId")
                        .HasColumnType("int");

                    b.Property<int?>("ManutencaoId")
                        .HasColumnType("int");

                    b.Property<string>("MotivoSis")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("NumeroEmpresa")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("NumeroRegistroPolicial")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ObservacaoSis")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("OrgaoPublicoId")
                        .HasColumnType("int");

                    b.Property<string>("Outros")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanoDeEmergenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("QualificacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("RegistroPolicialId")
                        .HasColumnType("int");

                    b.Property<string>("ResponsavelAveriguacao")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SeguimentoId")
                        .HasColumnType("int");

                    b.Property<int?>("SistemaFechaduraBluetoothId")
                        .HasColumnType("int");

                    b.Property<int?>("SistemaRastreamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("SistemaSisId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<bool?>("StatusSisGarantia")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoAcessoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoAlarme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoOcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoSiteId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TransportadoraId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracaoOcorrenciaId")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UsuarioOperadorId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioOperadorUsuarioId")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AcionadoProntoAtendimentoId");

                    b.HasIndex("AlarmeRealAcidenteId");

                    b.HasIndex("AnaliseConclusaoId");

                    b.HasIndex("AreaInternaId");

                    b.HasIndex("AreaSaudeId");

                    b.HasIndex("AreaTratamentoId");

                    b.HasIndex("AtendimentoSLAId");

                    b.HasIndex("BombeiroCivilId");

                    b.HasIndex("BombeiroMilitarId");

                    b.HasIndex("CmcId");

                    b.HasIndex("DetentoraId");

                    b.HasIndex("EmpresaChamadoSisId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EmpresaProntoAtendimentoId");

                    b.HasIndex("EquipamentoSisId");

                    b.HasIndex("EventoERBId");

                    b.HasIndex("FornecimentoAcessoFisicoId");

                    b.HasIndex("FornecimentoEventoAlarmeId");

                    b.HasIndex("FornecimentoImagemId");

                    b.HasIndex("GestaoPerdaId");

                    b.HasIndex("GestaoQualidadeId");

                    b.HasIndex("InboxId");

                    b.HasIndex("InformacaoComplementarId");

                    b.HasIndex("LocalId");

                    b.HasIndex("ManutencaoId");

                    b.HasIndex("OrgaoPublicoId");

                    b.HasIndex("PlanoDeEmergenciaId");

                    b.HasIndex("QualificacaoId");

                    b.HasIndex("RegistroPolicialId");

                    b.HasIndex("SeguimentoId");

                    b.HasIndex("SistemaFechaduraBluetoothId");

                    b.HasIndex("SistemaRastreamentoId");

                    b.HasIndex("SistemaSisId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TipoAcessoId");

                    b.HasIndex("TipoOcorrenciaId");

                    b.HasIndex("TipoSiteId");

                    b.HasIndex("TransportadoraId");

                    b.HasIndex("UsuarioOperadorUsuarioId");

                    b.ToTable("Ocorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.Passivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaInternaId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("PerdaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoRessarcimentoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorPassivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValorRecuperadoPassivo")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AreaInternaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PerdaId");

                    b.HasIndex("TipoRessarcimentoId");

                    b.ToTable("Passivo");
                });

            modelBuilder.Entity("NOVOROV.Models.Perda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoSinistro")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroBOSinistroRede")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadePerda")
                        .HasColumnType("int");

                    b.Property<int>("TipoEquipamentoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorEfetivamenteRecuperado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValorPerda")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValorPerdaEvitada")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("TipoEquipamentoId");

                    b.ToTable("Perda");
                });

            modelBuilder.Entity("NOVOROV.Models.Recuperacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaInternaPassivoId")
                        .HasColumnType("int");

                    b.Property<int>("DanoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRecuperacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataValorPassivo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataValorRecuperadoPassivo")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaPassivoId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroAntigo")
                        .HasColumnType("int");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Passivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("QualificacaoId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TipoRessarcimentoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioValorPassivoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioValorPassivoUsuarioId")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("ValorEvitado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorRecuperadoPassivo")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AreaInternaPassivoId");

                    b.HasIndex("DanoId");

                    b.HasIndex("EmpresaPassivoId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("QualificacaoId");

                    b.HasIndex("TipoRessarcimentoId");

                    b.HasIndex("UsuarioValorPassivoUsuarioId");

                    b.ToTable("Recuperacao");
                });

            modelBuilder.Entity("NOVOROV.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeSite")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SistemaFechaduraBluetoothId")
                        .HasColumnType("int");

                    b.Property<int?>("SistemaRastreamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoSiteId")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("SistemaFechaduraBluetoothId");

                    b.HasIndex("SistemaRastreamentoId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TipoSiteId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("NOVOROV.Models.Usuario", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CmcId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFimAcesso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicioAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeGestorVivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CmcId");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("NOVOROV.Models.AlteracaoOcorrencia", b =>
                {
                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithOne("UsuarioAlteracaoOcorrencia")
                        .HasForeignKey("NOVOROV.Models.AlteracaoOcorrencia", "OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NOVOROV.Models.Anexo", b =>
                {
                    b.HasOne("NOVOROV.Models.Usuario", "Autor")
                        .WithMany("Anexo")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Anexo")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoAnexo", "TipoAnexo")
                        .WithMany("Anexos")
                        .HasForeignKey("TipoAnexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Ocorrencia");

                    b.Navigation("TipoAnexo");
                });

            modelBuilder.Entity("NOVOROV.Models.ApoliceSeguro", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.TipoOcorrencia", "TipoOcorrencia")
                        .WithMany()
                        .HasForeignKey("TipoOcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoSite", "TipoSite")
                        .WithMany()
                        .HasForeignKey("TipoSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoOcorrencia");

                    b.Navigation("TipoSite");
                });

            modelBuilder.Entity("NOVOROV.Models.AuditoriaDano", b =>
                {
                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("AuditoriaDano")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoEquipamento", "TipoEquipamento")
                        .WithMany("AuditoriaDano")
                        .HasForeignKey("TipoEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("TipoEquipamento");
                });

            modelBuilder.Entity("NOVOROV.Models.AuditoriaRecuperacao", b =>
                {
                    b.HasOne("NOVOROV.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Dano", "Dano")
                        .WithMany()
                        .HasForeignKey("DanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany()
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.Qualificacao", "Qualificacao")
                        .WithMany("AuditoriaRecuperacao")
                        .HasForeignKey("QualificacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoAuditoria", "TipoAuditoria")
                        .WithMany()
                        .HasForeignKey("TipoAuditoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Dano");

                    b.Navigation("Ocorrencia");

                    b.Navigation("Qualificacao");

                    b.Navigation("TipoAuditoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NOVOROV.Models.Biblioteca", b =>
                {
                    b.HasOne("NOVOROV.Models.Usuario", "AnalistaSolicitante")
                        .WithMany()
                        .HasForeignKey("AnalistaSolicitanteUsuarioId");

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoBiblioteca", "TipoBiblioteca")
                        .WithMany("Biblioteca")
                        .HasForeignKey("TipoBibliotecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnalistaSolicitante");

                    b.Navigation("TipoBiblioteca");
                });

            modelBuilder.Entity("NOVOROV.Models.Dano", b =>
                {
                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Dano")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoEquipamento", "TipoEquipamento")
                        .WithMany()
                        .HasForeignKey("TipoEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("TipoEquipamento");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AtualizacaoOcorrencia", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.Motivo", "Motivo")
                        .WithMany()
                        .HasForeignKey("MotivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motivo");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AuditoriaInfrator", b =>
                {
                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("AuditoriaInfrator")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.EquipamentoPerda", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.TipoEquipamento", "TipoEquipamento")
                        .WithMany("EquipamentoPerda")
                        .HasForeignKey("TipoEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEquipamento");
                });

            modelBuilder.Entity("NOVOROV.Models.Observacao", b =>
                {
                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Observacao")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NOVOROV.Models.Ocorrencia", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.AcionadoProntoAtendimento", "AcionadoProntoAtendimento")
                        .WithMany()
                        .HasForeignKey("AcionadoProntoAtendimentoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.AlarmeRealAcidente", "AlarmeRealAcidente")
                        .WithMany()
                        .HasForeignKey("AlarmeRealAcidenteId");

                    b.HasOne("NOVOROV.Models.DropDownLists.AnaliseConclusao", "AnaliseConclusao")
                        .WithMany()
                        .HasForeignKey("AnaliseConclusaoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.AreaInterna", "AreaInterna")
                        .WithMany()
                        .HasForeignKey("AreaInternaId");

                    b.HasOne("NOVOROV.Models.DropDownLists.AreaSaude", "AreaSaude")
                        .WithMany()
                        .HasForeignKey("AreaSaudeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.AreaTratamento", "AreaTratamento")
                        .WithMany()
                        .HasForeignKey("AreaTratamentoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.AtendimentoSLA", "AtendimentoSLA")
                        .WithMany()
                        .HasForeignKey("AtendimentoSLAId");

                    b.HasOne("NOVOROV.Models.DropDownLists.BombeiroCivil", "BombeiroCivil")
                        .WithMany()
                        .HasForeignKey("BombeiroCivilId");

                    b.HasOne("NOVOROV.Models.DropDownLists.BombeiroMilitar", "BombeiroMilitar")
                        .WithMany()
                        .HasForeignKey("BombeiroMilitarId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Cmc", "Cmc")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("CmcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.Detentora", "Detentora")
                        .WithMany()
                        .HasForeignKey("DetentoraId");

                    b.HasOne("NOVOROV.Models.DropDownLists.EmpresaChamadoSis", "EmpresaChamadoSis")
                        .WithMany()
                        .HasForeignKey("EmpresaChamadoSisId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Empresa", "Empresa")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("NOVOROV.Models.EmpresaProntoAtendimento", "EmpresaProntoAtendimento")
                        .WithMany()
                        .HasForeignKey("EmpresaProntoAtendimentoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.EquipamentoSis", "EquipamentoSis")
                        .WithMany()
                        .HasForeignKey("EquipamentoSisId");

                    b.HasOne("NOVOROV.Models.DropDownLists.EventoERB", "EventoERB")
                        .WithMany()
                        .HasForeignKey("EventoERBId");

                    b.HasOne("NOVOROV.Models.DropDownLists.FornecimentoAcessoFisico", "FornecimentoAcessoFisico")
                        .WithMany()
                        .HasForeignKey("FornecimentoAcessoFisicoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.FornecimentoEventoAlarme", "FornecimentoEventoAlarme")
                        .WithMany()
                        .HasForeignKey("FornecimentoEventoAlarmeId");

                    b.HasOne("NOVOROV.Models.DropDownLists.FornecimentoImagem", "FornecimentoImagem")
                        .WithMany()
                        .HasForeignKey("FornecimentoImagemId");

                    b.HasOne("NOVOROV.Models.DropDownLists.GestaoPerda", "GestaoPerda")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("GestaoPerdaId");

                    b.HasOne("NOVOROV.Models.DropDownLists.GestaoQualidade", "GestaoQualidade")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("GestaoQualidadeId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Inbox", "Inbox")
                        .WithMany()
                        .HasForeignKey("InboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.InformacaoComplementar", "InformacaoComplementar")
                        .WithMany()
                        .HasForeignKey("InformacaoComplementarId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Local", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Manutencao", "Manutencao")
                        .WithMany()
                        .HasForeignKey("ManutencaoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.OrgaoPublico", "OrgaoPublico")
                        .WithMany()
                        .HasForeignKey("OrgaoPublicoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.PlanoDeEmergencia", "PlanoDeEmergencia")
                        .WithMany()
                        .HasForeignKey("PlanoDeEmergenciaId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Qualificacao", "Qualificacao")
                        .WithMany()
                        .HasForeignKey("QualificacaoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.RegistroPolicial", "RegistroPolicial")
                        .WithMany()
                        .HasForeignKey("RegistroPolicialId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Seguimento", "Seguimento")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("SeguimentoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.SistemaFechaduraBluetooth", "SistemaFechaduraBluetooth")
                        .WithMany()
                        .HasForeignKey("SistemaFechaduraBluetoothId");

                    b.HasOne("NOVOROV.Models.DropDownLists.SistemaRastreamento", "SistemaRastreamento")
                        .WithMany()
                        .HasForeignKey("SistemaRastreamentoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.SistemaSis", "SistemaSis")
                        .WithMany()
                        .HasForeignKey("SistemaSisId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Status", "Status")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoAcesso", "TipoAcesso")
                        .WithMany()
                        .HasForeignKey("TipoAcessoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoOcorrencia", "TipoOcorrencia")
                        .WithMany()
                        .HasForeignKey("TipoOcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoSite", "TipoSite")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("TipoSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.Transportadora", "Transportadora")
                        .WithMany()
                        .HasForeignKey("TransportadoraId");

                    b.HasOne("NOVOROV.Models.Usuario", "UsuarioOperador")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("UsuarioOperadorUsuarioId");

                    b.Navigation("AcionadoProntoAtendimento");

                    b.Navigation("AlarmeRealAcidente");

                    b.Navigation("AnaliseConclusao");

                    b.Navigation("AreaInterna");

                    b.Navigation("AreaSaude");

                    b.Navigation("AreaTratamento");

                    b.Navigation("AtendimentoSLA");

                    b.Navigation("BombeiroCivil");

                    b.Navigation("BombeiroMilitar");

                    b.Navigation("Cmc");

                    b.Navigation("Detentora");

                    b.Navigation("Empresa");

                    b.Navigation("EmpresaChamadoSis");

                    b.Navigation("EmpresaProntoAtendimento");

                    b.Navigation("EquipamentoSis");

                    b.Navigation("EventoERB");

                    b.Navigation("FornecimentoAcessoFisico");

                    b.Navigation("FornecimentoEventoAlarme");

                    b.Navigation("FornecimentoImagem");

                    b.Navigation("GestaoPerda");

                    b.Navigation("GestaoQualidade");

                    b.Navigation("Inbox");

                    b.Navigation("InformacaoComplementar");

                    b.Navigation("Local");

                    b.Navigation("Manutencao");

                    b.Navigation("OrgaoPublico");

                    b.Navigation("PlanoDeEmergencia");

                    b.Navigation("Qualificacao");

                    b.Navigation("RegistroPolicial");

                    b.Navigation("Seguimento");

                    b.Navigation("SistemaFechaduraBluetooth");

                    b.Navigation("SistemaRastreamento");

                    b.Navigation("SistemaSis");

                    b.Navigation("Status");

                    b.Navigation("TipoAcesso");

                    b.Navigation("TipoOcorrencia");

                    b.Navigation("TipoSite");

                    b.Navigation("Transportadora");

                    b.Navigation("UsuarioOperador");
                });

            modelBuilder.Entity("NOVOROV.Models.Passivo", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.AreaInterna", "AreaInterna")
                        .WithMany()
                        .HasForeignKey("AreaInternaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Perda", "Perda")
                        .WithMany("Passivo")
                        .HasForeignKey("PerdaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoRessarcimento", "TipoRessarcimento")
                        .WithMany()
                        .HasForeignKey("TipoRessarcimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaInterna");

                    b.Navigation("Empresa");

                    b.Navigation("Perda");

                    b.Navigation("TipoRessarcimento");
                });

            modelBuilder.Entity("NOVOROV.Models.Perda", b =>
                {
                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Perda")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoEquipamento", "TipoEquipamento")
                        .WithMany("Perda")
                        .HasForeignKey("TipoEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("TipoEquipamento");
                });

            modelBuilder.Entity("NOVOROV.Models.Recuperacao", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.AreaInternaPassivo", "AreaInternaPassivo")
                        .WithMany("Recuperacao")
                        .HasForeignKey("AreaInternaPassivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Dano", "Dano")
                        .WithMany("Recuperacao")
                        .HasForeignKey("DanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.EmpresaPassivo", "EmpresaPassivo")
                        .WithMany("Recuperacao")
                        .HasForeignKey("EmpresaPassivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Recuperacao")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.Qualificacao", "Qualificacao")
                        .WithMany("Recuperacao")
                        .HasForeignKey("QualificacaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoRessarcimento", "TipoRessarcimento")
                        .WithMany("Recuperacao")
                        .HasForeignKey("TipoRessarcimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.Usuario", "UsuarioValorPassivo")
                        .WithMany()
                        .HasForeignKey("UsuarioValorPassivoUsuarioId");

                    b.Navigation("AreaInternaPassivo");

                    b.Navigation("Dano");

                    b.Navigation("EmpresaPassivo");

                    b.Navigation("Ocorrencia");

                    b.Navigation("Qualificacao");

                    b.Navigation("TipoRessarcimento");

                    b.Navigation("UsuarioValorPassivo");
                });

            modelBuilder.Entity("NOVOROV.Models.Site", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.SistemaFechaduraBluetooth", "SistemaFechaduraBluetooth")
                        .WithMany("Site")
                        .HasForeignKey("SistemaFechaduraBluetoothId");

                    b.HasOne("NOVOROV.Models.DropDownLists.SistemaRastreamento", "SistemaRastreamento")
                        .WithMany("Site")
                        .HasForeignKey("SistemaRastreamentoId");

                    b.HasOne("NOVOROV.Models.DropDownLists.Status", "Status")
                        .WithMany("Site")
                        .HasForeignKey("StatusId");

                    b.HasOne("NOVOROV.Models.DropDownLists.TipoSite", "TipoSite")
                        .WithMany("Site")
                        .HasForeignKey("TipoSiteId");

                    b.Navigation("SistemaFechaduraBluetooth");

                    b.Navigation("SistemaRastreamento");

                    b.Navigation("Status");

                    b.Navigation("TipoSite");
                });

            modelBuilder.Entity("NOVOROV.Models.Usuario", b =>
                {
                    b.HasOne("NOVOROV.Models.DropDownLists.Cmc", "Cmc")
                        .WithMany("Usuario")
                        .HasForeignKey("CmcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NOVOROV.Models.DropDownLists.Perfil", "Perfil")
                        .WithMany("Usuario")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cmc");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("NOVOROV.Models.Dano", b =>
                {
                    b.Navigation("Recuperacao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.AreaInternaPassivo", b =>
                {
                    b.Navigation("Recuperacao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Cmc", b =>
                {
                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Empresa", b =>
                {
                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.EmpresaPassivo", b =>
                {
                    b.Navigation("Recuperacao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.GestaoPerda", b =>
                {
                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.GestaoQualidade", b =>
                {
                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Perfil", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Qualificacao", b =>
                {
                    b.Navigation("AuditoriaRecuperacao");

                    b.Navigation("Recuperacao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Seguimento", b =>
                {
                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.SistemaFechaduraBluetooth", b =>
                {
                    b.Navigation("Site");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.SistemaRastreamento", b =>
                {
                    b.Navigation("Site");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.Status", b =>
                {
                    b.Navigation("Ocorrencia");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoAnexo", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoBiblioteca", b =>
                {
                    b.Navigation("Biblioteca");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoEquipamento", b =>
                {
                    b.Navigation("AuditoriaDano");

                    b.Navigation("EquipamentoPerda");

                    b.Navigation("Perda");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoRessarcimento", b =>
                {
                    b.Navigation("Recuperacao");
                });

            modelBuilder.Entity("NOVOROV.Models.DropDownLists.TipoSite", b =>
                {
                    b.Navigation("Ocorrencia");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NOVOROV.Models.Ocorrencia", b =>
                {
                    b.Navigation("Anexo");

                    b.Navigation("AuditoriaDano");

                    b.Navigation("AuditoriaInfrator");

                    b.Navigation("Dano");

                    b.Navigation("Observacao");

                    b.Navigation("Perda");

                    b.Navigation("Recuperacao");

                    b.Navigation("UsuarioAlteracaoOcorrencia");
                });

            modelBuilder.Entity("NOVOROV.Models.Perda", b =>
                {
                    b.Navigation("Passivo");
                });

            modelBuilder.Entity("NOVOROV.Models.Usuario", b =>
                {
                    b.Navigation("Anexo");

                    b.Navigation("Ocorrencia");
                });
#pragma warning restore 612, 618
        }
    }
}
